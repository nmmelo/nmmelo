# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/package_module.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_module.html
# https://github.com/eapugo/Ansible-firewalld/blob/master/tasks/main.yml
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_error_handling.html#ignoring-failed-commands

---
- block:
  - name: Verificar e Instalar o serviço Firewalld
    ansible.builtin.package:
       name: firewalld
       state: latest
    ignore_errors: true
    tags:
      - install-firewalld-service

  - name: Start and enabled the Firewalld
    ansible.builtin.systemd:
       name: firewalld
       state: started
       enabled: yes
       daemon_reload: true
    register: started
    ignore_errors: true
  
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /tmp/ipset/
      state: directory
      mode: '0644'
      owner: root
      group: root
    become: true
    become_user: root 

  - name: Add entry to IPSet
    #debug: msg={{ ipset_rule.name }}{{ entry }}
    #command: firewall-cmd --permanent --ipset={{ ipset_rule.name }} --add-entry={{ entry }}
    template:
      src: ipset.xml.j2
      dest: "{{ ipset_folder }}/{{ item.name }}.xml"
      owner: root
      group: root
      mode: '0644' 
      backup: yes
    with_items: "{{ ipset_rules }}"
    become: true
    become_user: root
    notify: firewalld reload
     # loop_control:
     #   loop_var: entry
  rescue:
    - name: Debug Mode 3
      ansible.builtin.debug:
        msg: "ERROR - FALHA NO TARGET {{ inventory_hostname }}"
      tags:
        - print-debug
  # You can also add an always section to a block. Tasks in the always section run no matter what the task status of the previous block is. Block with always section
  always: 
     - name: SISOP | Update System OracleLinux
       ansible.builtin.dnf:
         name: "*"
         update_cache: yes
         nobest: true # Set best option to False, so that transactions are not limited to best candidates only.
         state: latest
       register: dnf_output
       when: ansible_facts['distribution'] == "OracleLinux" or ansible_facts['distribution'] == "CentOS"
       tags:
        - upgdate-centos
    
     - name: SISOP | Update System Debian
       ansible.builtin.apt:
         name: "*"
         state: latest
         update_cache: yes
       register: apt_output
       when: ansible_distribution == 'Ubuntu'
       tags:
         - update-debian

     - name: SISOP | Stat 
       ansible.builtin.stat: 
         path: "{{ ipset_folder }}/"
       register: find
      
     - name: SISOP | Find ipset xml files
       ansible.builtin.find:
          paths: "{{ ipset_folder}}"
          patterns: "*@*"
          age: 30d
          recurse:  yes
       register: find_results
       when: find.stat.exists
    
     - name: Debug Mode 4
       ansible.builtin.debug:
        msg: " {{ find_results }}"
       tags:
        - print-debug

     - name: SISOP | Remove old Backup IPSET FILES
       ansible.builtin.file:
         path: "{{ item['path'] }}"
         state: absent
       with_items: "{{ find_results['files'] }}"
       when: find_results.files != 0
     
     #- name: SISOP | Remove old Backup IPSET FILES
     #  include_tasks: remove.yml 
     #  vars:
     #    path_ipset: "{{ item }}"
       #when: inventory_hostname == item.hostname
     #  with_items: "{{ ipset_folder }}"
...